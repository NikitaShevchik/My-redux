{"version":3,"sources":["redux/store.ts","index.ts"],"names":[],"mappings":"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A,IAAA,IAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,KAAK;QAClB,IAAI,EAAE,KAAK;QACX,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC;;KAE5B,CAAC;IACF,KAAK,CAAC,KAAK,GAAG,EAAE;;AAExB,CAAC,CAAC;AAIF;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","file":"My redux.77de5100.js","sourceRoot":"..","sourcesContent":["export function createStore<T>(reducer: (state: T, action: { type: string; payload?: Partial<T> }) => T, initialState: T) {\r\n    let state = initialState;\r\n    let subscribing: () => void;\r\n    return {\r\n        getState: () => state,\r\n        dispatch(action: {\r\n            type: string;\r\n            payload?: Partial<T>\r\n        }) {\r\n            state = reducer(state, action);\r\n            subscribing();\r\n            return action;\r\n        },\r\n        subscribe(subscrib: () => void) {\r\n            subscribing = subscrib;\r\n        }\r\n    }\r\n}\r\n","import { createStore } from \"./redux/store\"\r\n\r\ninterface Todo {\r\n    text?: string;\r\n    done?: boolean;\r\n    id: number;\r\n}\r\nconst todoState: Todo[] = [\r\n    {\r\n        text: 'Do homework',\r\n        done: true,\r\n        id: 0\r\n    },\r\n    {\r\n        text: 'Make coffee',\r\n        done: false,\r\n        id: 1\r\n    },\r\n    {\r\n        text: 'Make popop',\r\n        done: true,\r\n        id: 2\r\n    }\r\n]\r\n\r\n\r\n// console.log(todoState.find(todo => todo.id === 0).done)\r\n\r\nenum todoActionTypes {\r\n    ADD_TODO = 'ADD_TODO',\r\n    REMOVE_TODO = 'REMOVE_TODO',\r\n    SET_TODO = 'SET_TODO'\r\n}\r\n\r\n\r\nfunction todoReducer(state: [], action: { type: string, payload?: Todo[] | number }) {\r\n    switch (action.type) {\r\n        case 'ADD_TODO':\r\n            state.push(action.payload);\r\n            return state\r\n        case 'REMOVE_TODO':\r\n            return state = state.filter(todo => action.payload !== todo.id)\r\n        case 'SET_TODO':\r\n\r\n            const newState = state.map((todo) => (\r\n                todo.id === action.payload\r\n                    ? { ...todo, done: !todo.done }\r\n                    : todo\r\n            ));\r\n\r\n\r\n            // state[action.payload].done = !state[action.payload].done;\r\n            return newState\r\n        default:\r\n            return action\r\n    }\r\n}\r\n\r\nconst store = createStore(todoReducer, todoState)\r\n// console.log(todoState)\r\n// console.log(store.getState())\r\n// store.dispatch({\r\n//     type: 'ADD_TODO',\r\n//     payload: {\r\n//         text: 'Nikita',\r\n//         done: false,\r\n//         id: 3\r\n//     }\r\n// })\r\nconst todo = document.querySelector('.todo');\r\n\r\n// console.log(todo?.children)\r\nfunction updateTodo() {\r\n    let storage = store.getState();\r\n    todo?.innerHTML = '';\r\n    storage.map(y => todo?.innerHTML += `<div class=\"todo__element\" id=\"${y.id}\"><p id=\"${y.id}\" data-done=\"${y.done}\" class=\"todo__item\">${y.text}</p><i id=\"${y.id}\" class='bx bx-trash'></i></div>`)\r\n    const todosText = document.querySelectorAll('.todo__item');\r\n    for (let k of todosText) {\r\n        k.addEventListener('click', () => {\r\n            store.dispatch({\r\n                type: 'SET_TODO',\r\n                payload: Number(k.id)\r\n            })\r\n        })\r\n    }\r\n    let todoDelete = document.querySelectorAll('.bx-trash');\r\n    for (let k of todoDelete) {\r\n        k.addEventListener('click', (e) => {\r\n            store.dispatch({\r\n                type: 'REMOVE_TODO',\r\n                payload: Number(k.id)\r\n            })\r\n        })\r\n    }\r\n}\r\nupdateTodo()\r\nstore.subscribe(updateTodo)\r\n\r\n// store.dispatch({\r\n//     type: 'REMOVE_TODO',\r\n//     payload: 0\r\n// })\r\nlet storage = store.getState();\r\n// console.log(storage.find(todo => todo.id === 0).done = false )\r\nconsole.log(store.getState())\r\n// store.dispatch({\r\n//     type: 'ADD_TODO',\r\n//     payload: {\r\n//         text: 'Nikita',\r\n//         done: false,\r\n//         id: 3\r\n//     }\r\n// })\r\n// store.dispatch({\r\n//     type: 'ADD_TODO',\r\n//     payload: {\r\n//         text: 'Nibakita',\r\n//         done: false,\r\n//         id: 4\r\n//     }\r\n// })\r\n// store.dispatch({\r\n//     type: 'ADD_TODO',\r\n//     payload: {\r\n//         text: 'Nissta',\r\n//         done: false,\r\n//         id: 5\r\n//     }\r\n// })\r\n\r\nconst buttonAddTodo = document.querySelector('.add');\r\nbuttonAddTodo?.addEventListener('click', () => {\r\n    let input = document.querySelector('.input') as HTMLInputElement;\r\n    if (input?.value !== '') {\r\n        store.dispatch({\r\n            type: \"ADD_TODO\",\r\n            payload: {\r\n                text: input?.value,\r\n                done: false,\r\n                id: store.getState().length\r\n            }\r\n        })\r\n        input.value = \"\";\r\n    }\r\n})\r\n\r\n\r\n\r\n// console.log(store.getState())\r\n// store.dispatch({\r\n//     type: 'SET_TODO',\r\n//     payload: '0'\r\n// })\r\n\r\n// store.dispatch({\r\n//     type: 'REMOVE_TODO',\r\n//     payload: {\r\n//         text: 'Nikita',\r\n//         done: false,\r\n//         id: 3\r\n//     }\r\n// })\r\n\r\n\r\n\r\n// store.dispatch({\r\n//     type: 'ADD_TODO',\r\n//     payload: {\r\n//         text: 'Aleryt',\r\n//         done: false,\r\n//         id: 3\r\n//     }\r\n// })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function createStore<T>(reducer: (state: T, action: { type: string; payload?: Partial<T> }) => T, initialState: T) {\r\n//     let state = initialState;\r\n//     return {\r\n//         getState: () => state,\r\n//         dispatch(action: {\r\n//             type: string;\r\n//             payload?: Partial<T>\r\n//         }) {\r\n//             state = reducer(state, action);\r\n//             return action;\r\n//         },\r\n//     }\r\n// }\r\n\r\n// const initialState = 10;\r\n// enum actionsType {\r\n//     ADD_ONE = 'ADD_ONE',\r\n//     MIN_ONE = 'MIN_ONE'\r\n// }\r\n// function reducerStore(state, action) {\r\n//     switch (action.type) {\r\n//         case actionsType.ADD_ONE:\r\n//             return state = state + 1;\r\n//         case actionsType.MIN_ONE:\r\n//             return state = state - 1;\r\n//         default:\r\n//             return state\r\n//     }\r\n// }\r\n\r\n// const store = createStore(reducerStore, initialState);\r\n\r\n\r\n// console.log(store.getState())\r\n// console.log(store.dispatch({\r\n//     type: 'ADD_ONE'\r\n// }))\r\n// console.log(store.dispatch({\r\n//     type: 'ADD_ONE'\r\n// }))\r\n// console.log(store.dispatch({\r\n//     type: 'ADD_ONE'\r\n// }))\r\n// console.log(store.getState())\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------\r\n\r\n// type FunctionalComponent<T extends object = object> = (props: T & { children: any }) => any;\r\n\r\n// const component: FunctionalComponent<{ name: string, age: number }> = (\r\n//     {\r\n//         children\r\n//     }\r\n// ) => {\r\n\r\n// }\r\n\r\n\r\n// function createStore<T>(reducer: (state: T, action: { type: string, payload?: Partial<T> }) => T, initialState: T) {\r\n//     let state = initialState;\r\n//     // let subscribing;\r\n//     // function dispatch(action) {\r\n//     //     reducer(state, action);\r\n//     //     return action;\r\n//     // }\r\n//     return {\r\n//         getState: () => state,\r\n//         dispatch(action) {\r\n//             state = reducer(state, action);\r\n//             // subscribing()\r\n//             return action;\r\n//         },\r\n//         // subscribe(subscrib) {\r\n//         //     subscribing = subscrib;\r\n//         // }\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n// function createStore<T>(reducer: (state: T, action: { type: string; payload?: Partial<T> }) => T, initialState: T) {\r\n//     let state = initialState;\r\n//     let subscribing;\r\n//     function dispatch(action: {\r\n//         type: string;\r\n//         payload?: Partial<T>\r\n//     }) {\r\n//         reducer(state, action);\r\n//     }\r\n//     return {\r\n//         getState: () => state,\r\n//         dispatch(action) {\r\n//             state = reducer(state, action);\r\n//             subscribing()\r\n//             return action;\r\n//         },\r\n//         subscribe(subscrib) {\r\n//             subscribing = subscrib;\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n// interface Action<T> {\r\n//     type: string;\r\n//     payload?: Partial<T>\r\n// }\r\n\r\n// interface Reducer<T> {\r\n//     state: T;\r\n//     action: Action<T>;\r\n// }\r\n\r\n// interface CreateStoreInterface<T> {\r\n//     reducer: Reducer<T>;\r\n//     initialState: T;\r\n\r\n// }\r\n"]}