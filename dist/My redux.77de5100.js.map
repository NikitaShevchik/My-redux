{"version":3,"sources":["redux/store.ts","node_modules/nanoid/url-alphabet/index.js","node_modules/nanoid/index.browser.js","index.ts"],"names":["urlAlphabet","random","bytes","crypto","getRandomValues","Uint8Array","customRandom","alphabet","defaultSize","getRandom","mask","Math","log","length","LN2","step","size","id","j","customAlphabet","nanoid","reduce","byte","toString","toUpperCase"],"mappings":";;;;;;ACAO,ADAP,ICAaA,KDAG,MCAQ,GACtB,EDDyB,CAAI,OAAwE,EAAE,YAAe,EAAA,wCCCpD;AAAA,EDAhE,IAAI,KAAK,GAAG,YAAY;EACxB,IAAI,WAAuB;EAC3B,OAAO;IACH,QAAQ,EAAE,oBAAA;MAAM,OAAA,KAAK;AEJ7B,IFIwB,CAAK;AEHtB,IAAIC,AFIH,MEJS,EFID,CEJI,CFIJ,QEJLA,MAAM,CAAGC,GFIH,EEJQ,IFOhB,EAAA;EEPgB,IFQb,GERiBC,EFQZ,GAAG,CERe,CAACC,KFQT,CAAC,KAAK,EAAE,EERgB,CAAC,GFQX,CEReC,AFQd,UERwB,CAACH,KAAK,CAAC,CAAC;AAAA,MFS9D,WAAW,EAAE;AETiD,MFU9D,OAAO,MAAM;AGXzB,ADEO,ICFP,ADEWI,AFUH,CAAC,MGZT,GAAA,EDEuB,GAAG,ECF1B,CAAA,MDEWA,SCFX,CAAA,EDEuB,CAAIC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,EAAK;ACDhE,EDEE,ECFF,AHYQ,EEVFC,IAAI,ECFV,CDEa,AFUI,CEVH,CCFd,ADEe,AFUE,IEVGC,GCFpB,CAAA,ADEwB,CAACC,GAAG,CAACL,GCF7B,CAAA,EHYkB,EEVmB,CAACM,KFUE,CEVI,CFUJ,EEVO,CAAC,CAAC,GAAGF,IAAI,CAACG,GAAI,IAAI,CAAC;ACAlE,EDCE,IAAIC,AFUM,GGXH,CDCC,CCDC,EDCE,CCDF,ADCG,EAAG,CFUM,EEVH,CFUM,EEVHL,IAAI,EFUO,CEVJF,WAAW,GAAID,QAAQ,CAACM,MAAM,CAAC;ECAzD,ADCF,EFUM,KGXG,ADCF,CCDE,CAAA,EAAA,QAAA,ADCsB,CCDtB,MAAM,GAAE;AACnB,GHWK,CEX4B,IAAvBG,IAAI,uEAAGR,WAAW;ACU5B,AHEA,IGFM,ADTF,IAAIS,EAAE,GCSK,ADTF,EAAE,CCSY,CACvB;AHhBJ,EGiBQ,EDVJ,ECUQ,CHjBZ,CGiBc,AHjBd,GEOW,IAAI,EAAE,EFPjB,EGiB2B,CHjB3B,WAAA;EGkBQ,IAAI,ADVN,ECUQ,EDVJf,GCUS,EDVJ,GAAGO,SAAS,CAACM,IAAI,CAAC;ECWzB,EAAE,EAAE,ADVN,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","file":"My redux.77de5100.js","sourceRoot":"..","sourcesContent":["export function createStore<T>(reducer: (state: T, action: { type: string; payload?: Partial<T> }) => T, initialState: T) {\r\n    let state = initialState;\r\n    let subscribing: () => void;\r\n    return {\r\n        getState: () => state,\r\n        dispatch(action: {\r\n            type: string;\r\n            payload?: Partial<T>\r\n        }) {\r\n            state = reducer(state, action);\r\n            subscribing();\r\n            return action;\r\n        },\r\n        subscribe(subscrib: VoidFunction) {\r\n            subscribing = subscrib;\r\n        }\r\n    }\r\n}","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { createStore } from \"./redux/store\"\r\nimport { nanoid } from 'nanoid'\r\n\r\nfunction id() {\r\n    return nanoid()\r\n}\r\ninterface ITodo {\r\n    text?: string,\r\n    done?: boolean,\r\n    id?: string\r\n}\r\ninterface IAction<T> {\r\n    type: string;\r\n    payload?: Partial<T>;\r\n}\r\nconst todoState: ITodo[] = [\r\n    {\r\n        text: 'Do homework',\r\n        done: false,\r\n        id: id()\r\n    },\r\n    {\r\n        text: 'Make coffee',\r\n        done: false,\r\n        id: id()\r\n    },\r\n    {\r\n        text: 'Make popop',\r\n        done: false,\r\n        id: id()\r\n    }\r\n]\r\n\r\nenum todoActionTypes {\r\n    ADD_TODO = 'ADD_TODO',\r\n    REMOVE_TODO = 'REMOVE_TODO',\r\n    SET_TODO = 'SET_TODO'\r\n}\r\n\r\n\r\nfunction todoReducer(state: ITodo[], action: IAction<ITodo>) {\r\n    switch (action.type) {\r\n        case 'ADD_TODO':\r\n            state.push({\r\n                ...action.payload,\r\n                done: false,\r\n                id: id(),\r\n            });\r\n            return state\r\n        case 'REMOVE_TODO':\r\n            const filterState = state.filter(todo => action.payload?.id !== todo.id)\r\n            return filterState\r\n        case 'SET_TODO':\r\n            const newState = state.map((todo) => (\r\n                todo.id === action.payload?.id\r\n                    ? { ...todo, done: !todo.done }\r\n                    : todo\r\n            ));\r\n            return newState\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst store = createStore(todoReducer, todoState)\r\n\r\nconst todo = document.querySelector('.todo') as HTMLElement;\r\n\r\nfunction updateTodo() {\r\n    let storage = store.getState();\r\n    todo.innerHTML = '';\r\n    storage.map(y => todo.innerHTML += `<div class=\"todo__element\" ><p id=\"${y.id}\" data-done=\"${y.done}\" class=\"todo__item\">${y.text}</p><i id=\"${y.id}\" class='bx bx-trash'></i></div>`)\r\n    const todosText = document.querySelectorAll('.todo__item');\r\n    for (let k of todosText) {\r\n        k.addEventListener('click', (e) => {\r\n            // let idK: string = String(k.id);\r\n            store.dispatch({\r\n                type: 'SET_TODO',\r\n                payload: {\r\n                    id: e.target.id\r\n                }\r\n            })\r\n        })\r\n    }\r\n    let todoDelete = document.querySelectorAll('.bx-trash');\r\n    for (let k of todoDelete) {\r\n        k.addEventListener('click', (e) => {\r\n            store.dispatch({\r\n                type: 'REMOVE_TODO',\r\n                payload: {\r\n                    id: k.id\r\n                }\r\n            })\r\n        })\r\n    }\r\n}\r\nupdateTodo()\r\nstore.subscribe(updateTodo)\r\n\r\nconst buttonAddTodo = document.querySelector('.add');\r\nbuttonAddTodo?.addEventListener('click', () => {\r\n    let input = document.querySelector('.input') as HTMLInputElement;\r\n    if (input.value !== '') {\r\n        const value: string = String(input.value);\r\n        store.dispatch({\r\n            type: \"ADD_TODO\",\r\n            payload: {\r\n                text: value\r\n            }\r\n        })\r\n        input.value = \"\";\r\n    }\r\n})\r\n\r\nconst showState = document.querySelector('.state');\r\nshowState?.addEventListener('click', () => {\r\n    const state = store.getState();\r\n    console.log(state)\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function createStore<T>(reducer: (state: T, action: { type: string; payload?: Partial<T> }) => T, initialState: T) {\r\n//     let state = initialState;\r\n//     return {\r\n//         getState: () => state,\r\n//         dispatch(action: {\r\n//             type: string;\r\n//             payload?: Partial<T>\r\n//         }) {\r\n//             state = reducer(state, action);\r\n//             return action;\r\n//         },\r\n//     }\r\n// }\r\n\r\n// const initialState = 10;\r\n// enum actionsType {\r\n//     ADD_ONE = 'ADD_ONE',\r\n//     MIN_ONE = 'MIN_ONE'\r\n// }\r\n// function reducerStore(state, action) {\r\n//     switch (action.type) {\r\n//         case actionsType.ADD_ONE:\r\n//             return state = state + 1;\r\n//         case actionsType.MIN_ONE:\r\n//             return state = state - 1;\r\n//         default:\r\n//             return state\r\n//     }\r\n// }\r\n\r\n// const store = createStore(reducerStore, initialState);\r\n\r\n\r\n// console.log(store.getState())\r\n// console.log(store.dispatch({\r\n//     type: 'ADD_ONE'\r\n// }))\r\n// console.log(store.dispatch({\r\n//     type: 'ADD_ONE'\r\n// }))\r\n// console.log(store.dispatch({\r\n//     type: 'ADD_ONE'\r\n// }))\r\n// console.log(store.getState())\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------\r\n\r\n// type FunctionalComponent<T extends object = object> = (props: T & { children: any }) => any;\r\n\r\n// const component: FunctionalComponent<{ name: string, age: number }> = (\r\n//     {\r\n//         children\r\n//     }\r\n// ) => {\r\n\r\n// }\r\n\r\n\r\n// function createStore<T>(reducer: (state: T, action: { type: string, payload?: Partial<T> }) => T, initialState: T) {\r\n//     let state = initialState;\r\n//     // let subscribing;\r\n//     // function dispatch(action) {\r\n//     //     reducer(state, action);\r\n//     //     return action;\r\n//     // }\r\n//     return {\r\n//         getState: () => state,\r\n//         dispatch(action) {\r\n//             state = reducer(state, action);\r\n//             // subscribing()\r\n//             return action;\r\n//         },\r\n//         // subscribe(subscrib) {\r\n//         //     subscribing = subscrib;\r\n//         // }\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n// function createStore<T>(reducer: (state: T, action: { type: string; payload?: Partial<T> }) => T, initialState: T) {\r\n//     let state = initialState;\r\n//     let subscribing;\r\n//     function dispatch(action: {\r\n//         type: string;\r\n//         payload?: Partial<T>\r\n//     }) {\r\n//         reducer(state, action);\r\n//     }\r\n//     return {\r\n//         getState: () => state,\r\n//         dispatch(action) {\r\n//             state = reducer(state, action);\r\n//             subscribing()\r\n//             return action;\r\n//         },\r\n//         subscribe(subscrib) {\r\n//             subscribing = subscrib;\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n// interface Action<T> {\r\n//     type: string;\r\n//     payload?: Partial<T>\r\n// }\r\n\r\n// interface Reducer<T> {\r\n//     state: T;\r\n//     action: Action<T>;\r\n// }\r\n\r\n// interface CreateStoreInterface<T> {\r\n//     reducer: Reducer<T>;\r\n//     initialState: T;\r\n\r\n// }\r\n"]}